@page "/consultaClientes"

@inject NotificationService notificationService
@inject HttpClient httpClient

<div class="container">
    <div class="card">
        <div class="card-header">
            <head>
                <h1>Consulta de Clientes</h1>
            </head>
        </div>

        <div class="card-body">
            <body>
                <a href="/registroClientes"><button type="button" class="btn btn-outline-info"><i class="oi oi-plus">Agregar Nuevo Cliente</i></button></a>
            
                
                <div class = "row">
                    @*Campo para buscar por Id*@
                    <div class ="col">
                        <label>Buscar por Id</label>
                        <InputNumber class="form-control" @bind-Value="clienteId" aria-placeholder="BusquedaId"> </InputNumber>
                    </div>

                        @*Boton Buscar*@
                        <div class="col">
                           <button type ="button" class="btn btn-outline-primary" @onclick="Buscar"> <i class="oi oi-reload"> Buscar</i></button>
                        </div>
                </div>


                @if (clientes is not null)
                {
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>ClienteId</th>
                                <th>Nombres</th>
                                <th>Telefono</th>
                                <th>Celular</th>
                                <th>Rnc</th>
                                <th>Email</th>
                                <th>Direccion</th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var cliente in clientes)
                            {
                                <tr>
                                    <td>@cliente.ClienteId</td>
                                    <td>@cliente.Nombre</td>
                                    <td>@cliente.Telefono</td>
                                    <td>@cliente.Celular</td>
                                    <td>@cliente.Rnc</td>
                                    <td>@cliente.Email</td>
                                    <td>@cliente.Direccion</td>
                                    <td><a href="/registroClientes/@cliente.ClienteId"><button type ="button" class ="btn btn-outline-primary"><i class="oi oi-eye" ></i> Ver</button></a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </body>
        </div>

         <div class="card-footer">
            <div class="form-row justify-content-sm-between" aria-orientation="vertical">
                <div class="col-2">
                    <label for="CantidadFilas" class="col-form-label"><strong>Num. Filas</strong>&nbsp;</label>
                    <input id="CantidadFilas" @bind-value="@Conteo" disabled class="form-control" />
                </div>
            </div>
        </div>
    </div>
</div>


@code
{
    public List<Clientes> clientes {get; set;} = new List<Clientes>();
     public int clienteId{get; set;}

     public int Conteo {get; set;}
    
    protected override async Task OnInitializedAsync()
    {}

    public async Task Buscar()
    {
        if (clienteId < 0)
        {
            var Mensaje = new NotificationMessage 
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error: No existe un Id negativo",
                Detail = "Revise el numero insertado (tiene que ser positivo)",
                Duration = 6_000
            };
            notificationService.Notify(Mensaje);
        }

        clientes = await httpClient.GetFromJsonAsync<List<Clientes>>($"api/Clientes");

        if(clienteId > 0)
        {
            clientes = clientes.Where(c => c.ClienteId == clienteId).ToList();
        }
        Conteo = clientes != null ? clientes.Count : 0;
        StateHasChanged();   
    }
}